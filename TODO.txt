TODO:

- Flexible typing for integer literals (lit_ty, litTypeOf)
- Printing strings
- Mutability of variables
- Implement regions
- Function type specifier type (region parameter)
- Concretize function parameters
- Region pointers
- Implement letregion

DONE:

- Check type of function body matches return type
- Check type of arguments in binops
- Implement comments
- Fix parser: whitespace-only forms
- Implement the
- Fix parser: whitespace-prefixed forms
- Clean up the backend so it's less shitty
- Indent the C output
- Escape function and variable names
- Move the typed AST to its own sig/struct
- Implement progn
- Implement let
- Implement raw pointer types
- Implement nullptr
- Implement load
- Implement pointer equality
- Implement store
- Implement malloc
- Implement a print function for primitive types
- Fix function calls
- Implement free
- Implement c/embed
- Implement record types
- Implement c/call
- Implement assignment
- Implement while loop
- Simplify integer types
- Implement address-of
- Keep track of variable mutability
- Forbid mutating function arguments or immutable vars
- Print newline handling (print vs println)

WISHLIST:

- Implement macros
- Implement function declarations
- Not equal binop
- (print s_0 s_1 ... s_n) => (progn (print s_0) (print s_1) (print s_n))
- Not function on booleans
